doctype html
html(lang='en')
	head
		meta(charset='utf-8')
		title Running Java from Node.js
		meta(name='description', content='Evaluating different methods to run Java code from Node.js.')
		meta(name='author', content='Christian Dittrich')
		meta(name='apple-mobile-web-app-capable', content='yes')
		meta(name='apple-mobile-web-app-status-bar-style', content='black-translucent')
		meta(name='viewport', content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')
		link(rel='stylesheet', href='css/reveal.css')
		link#theme(rel='stylesheet', href='css/theme/black.css')
		// Code syntax highlighting
		link(rel='stylesheet', href='lib/css/zenburn.css')
		// Printing and PDF exports
		script.
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		//if lt IE 9
			script(src='lib/js/html5shiv.js')
	body
		.reveal
			// Any section element inside of this container is displayed as a slide
			.slides

				section
					h1 Running Java from Node.js
					h2
						a(href='mailto:christian.dittrich@creatale.de?subject=Dein%20Vortrag%20beim%206.%20WebDev%20BBQ') Christian Dittrich
					h3
						a(href='http://creatale.de') creatale GmbH
					p WebDev BBQ, 15.09.2015
					
				section
					h1 Use Case
					h2
						a(href='https://github.com/creatale/node-dv') node-dv
					ul.fragment
						li image manipulation: 
							a(href='http://www.leptonica.com') Leptonica
							|  and 
							a(href='http://opencv.org') OpenCV
						li OCR: 
							a(href='http://code.google.com/p/tesseract-ocr/') Tesseract
						li OMR: custom
						li barcode reader: 
							a(href='https://github.com/zxing/zxing') ZXing
							
				section
					h1 ZXing in Node.js
					ul
						li native module using 
							a(href='https://github.com/zxing/zxing/tree/00f634024ceeee591f54e6984ea7dd666fab22ae/cpp') official C++ port
						li.drawback discontinued since 2013
				
				section
					h1 What now?
					h1.fragment DIY?
					
				section
					h1 Requirements
					ul
						li.fragment easy to keep up to date (automatically?)
						li.fragment platform "independent" (at least Windows and Linux)
						li.fragment easy to use API (has to work with buffers, not just files)
						li.fragment performant
						
				section
					h1 1. Execute Java
					ul.fragment
						li childProcess.spawn
						li
							a(href='https://github.com/YaroslavGaponov/node-jvm') node-jvm
						li client + server (aka service)
						.fragment
							li.drawback not capable of working directly with buffers (only 
								code public static void main(String[] args)
								|  entry points)
							li.drawback usually extra processes
							
				section
					h1 2. Java to C/C++
					
				section
					h1 j2c
					ul
						li
							a(href='https://bitbucket.org/arnetheduck/j2c') https://bitbucket.org/arnetheduck/j2c
						li Eclipse Plugin by Google
						li supports Java 1.6
						.fragment
							li.drawback errors when compiling ZXing
							li.drawback no Java class library implementation provided

				section
					h1 XMLVM
					ul
						li
							a(href='http://xmlvm.org/overview/') http://xmlvm.org/overview/
						li cross platform mobile development
						.fragment
							li.drawback problems with some java.nio classes ZXing uses (Paths, Files, DirectoryStream)

				section
					h1 Tangible
					ul
						li
							a(href='http://www.tangiblesoftwaresolutions.com/Product_Details/CPlusPlus_to_Java_Converter_Details.html') http://www.tangiblesoftwaresolutions.com/Product_Details/CPlusPlus_to_Java_Converter_Details.html
						li.drawback costs money
						li.drawback free version limited to 100 lines of code at once

				section
					h1 Java2C
					ul
						li
							a(href='http://sourceforge.net/projects/java2c/') http://sourceforge.net/projects/java2c/
						li Java to C for embedded projects
						.fragment
							li.drawback only limited subset of Java supported (no generics, ZXing needs generics)
							li.drawback last updated in 2011
							
				section
					h1 JCGO
					ul
						li
							a(href='http://www.ivmaisoft.com/jcgo/') http://www.ivmaisoft.com/jcgo/
						li.drawback supports only Java 1.4 (ZXing needs generics)
						
				section
					h1 GCJ
					ul
						li
							a(href='http://gcc.gnu.org/java/') http://gcc.gnu.org/java/
						li GNU
						.fragment
							li.drawback supports only Java 1.4 + some 1.5 features
							li.drawback last updated in 2009
							li.drawback java.nio missing (ZXing uses nio)

				section
					h1 Toba
					ul
						li
							a(href='http://www.cs.arizona.edu/projects/sumatra/toba/') http://www.cs.arizona.edu/projects/sumatra/toba/
						li.drawback supports only Java 1.2
						li.drawback last updated in 1999

				section
					h1 XES
					ul
						li
							a(href='http://www.euclideanspace.com/software/language/xes/userGuide/convert/javaToCpp/index.htm') http://www.euclideanspace.com/software/language/xes/userGuide/convert/javaToCpp/index.htm
						li.drawback manual translation of symbol table necessary (e.g. java.io to System)
						
				section
					h1 3. JNI
					ul.fragment
						li
							a(href='https://github.com/joeferner/node-java') 'java' node module
						li ok-ish API
							pre
								code(data-trim).javascript.
									var list = java.newInstanceSync("java.util.ArrayList");
						.fragment
							li.drawback has problems with memory management (frequent out of memory exceptions), waiting for GC kills performance
						
				section
					h1 4. Java to JavaScript

				section
					h1 XMLVM
					ul
						li
							a(href='http://xmlvm.org/overview/') http://xmlvm.org/overview/
						li cross platform mobile development
						li.drawback uses Qooxdoo, client side only module
						
				section
					h1 Java2Script
					ul
						li
							a(href='https://code.google.com/p/java2script/') https://code.google.com/p/java2script/
						li Eclipse Plugin
						.fragment
							li.drawback compiled code contains errors
							li.drawback when compiling ZXing, some java.nio stuff missing
						
				section
					h1 GWT
					ul
						li
							a(href='http://www.gwtproject.org') http://www.gwtproject.org
						li by Google
						li for Web Applications
						.fragment
							li.drawback needs explicit support by project (has to be packaged into a GWT module)
						
				section
					h1 GWT Exporter
					ul
						li
							a(href='https://code.google.com/p/gwt-exporter/') https://code.google.com/p/gwt-exporter/
						li built on GWT, does not need an GWT Application to work
						.fragment
							li.drawback needs annotation of source code with 
								code @Export()
								|  and 
								code implements Exportable
						
				section
					h1 Kotlin
					ul
						li
							a(href='http://kotlinlang.org') http://kotlinlang.org
						li a JVM language by JetBrains
						li compiles to JavaScript
						li Java can be automatically translated to Kotlin
						.fragment
							li.drawback errors when compiling ZXing to JavaScript
				
				section
					h1 Recap
					ol(style='width:50%')
						li.fragment.strike(style='visibility: visible;') Execute Java
						li.fragment.strike(style='visibility: visible;') Java to C/C++
						li.fragment.strike(style='visibility: visible;') JNI
						li.fragment.strike(style='visibility: visible;') Java to JavaScript
				
				section
					h1 5. 
						span.fragment Java to C# + 'edge' node module
					
				section
					h1 What is edge?
					ul.fragment
						li
							a(href='https://github.com/tjanczuk/edge') https://github.com/tjanczuk/edge
						li in process .NET code execution for Node.js and vice versa
					pre.fragment
						code(data-trim).javascript.
							var edge = require('edge');

							var helloWorld = edge.func(function () {/*
								async (input) => { 
									return ".NET Welcomes " + input.ToString(); 
								}
							*/});

							helloWorld('JavaScript', function (error, result) {
								if (error) throw error;
								console.log(result);
							});
				
				section
					h1 sharpen
					ul
						li
							a(href='https://github.com/mono/sharpen') https://github.com/mono/sharpen
						li.drawback does not support multi dimensional arrays
						
				section
					h1 Tangible
					ul
						li
							a(href='http://www.tangiblesoftwaresolutions.com/Product_Details/Java_to_CSharp_Converter.html') http://www.tangiblesoftwaresolutions.com/Product_Details/Java_to_CSharp_Converter.html
						li.drawback costs money
						li.drawback free version limited to 100 lines of code at once

				section
					h1 XES
					ul
						li
							a(href='http://www.euclideanspace.com/software/language/xes/userGuide/convert/javaToCSharp/index.htm') http://www.euclideanspace.com/software/language/xes/userGuide/convert/javaToCSharp/index.htm
						li.drawback manual translation of symbol table necessary (e.g. java.io to stdio.h)
						
				section
					h1 Octopus
					ul
						li
							a(href='http://www.remotesoft.com/octopus/') http://www.remotesoft.com/octopus/
						li.drawback costs money
						li.drawback online demo does not compile ZXing file
						
				section
					h1 Java Language Conversion Assistant 2.0
					ul
						li
							a(href='http://www.microsoft.com/en-us/download/details.aspx?id=14349') http://www.microsoft.com/en-us/download/details.aspx?id=14349
						li by Microsoft
						li.drawback no longer available :(
						
				section
					h1 VaryCode
					ul
						li
							a(href='https://www.varycode.com') https://www.varycode.com
						li.drawback costs money
						li.drawback free version limited to 2048 characters at once
						
				section
					h1 Finally: The Solution
					
				section
					h1 XMLVM
					p
						a(href='http://xmlvm.org/overview/') http://xmlvm.org/overview/
					ol.fragment
						li build JAR
						li compile to .NET-DLL via XMLVM
						li use 'edge' node module and 
							a(href='http://www.ikvm.net') IKVM
							|  to run in-process on Node.js
					ul.fragment
						li easy to keep up to date
						li platform independent (Mono)
						li usable API (same classes and methods for every object in C# + litte JavaScript boilerplate)
						li about 10% performance loss for ZXing, compared to original Java code
							
				section
					h1 Example
					
				section
					h1 Coming soon to 
						a(href='https://github.com/creatale') GitHub
					h2 'zxing-edge' node module

		script(src='lib/js/head.min.js')
		script(src='js/reveal.js')
		script.
			// Full list of configuration options available at:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
			controls: true,
			progress: true,
			history: true,
			center: true,
			transition: 'slide', // none/fade/slide/convex/concave/zoom
			// Optional reveal.js plugins
			dependencies: [
			{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
			{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
			{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
			{ src: 'plugin/highlight/highlight.js', async: true, condition: function() { return !!document.querySelector( 'pre code' ); }, callback: function() { hljs.initHighlightingOnLoad(); } },
			{ src: 'plugin/zoom-js/zoom.js', async: true },
			{ src: 'plugin/notes/notes.js', async: true }
			]
			});
